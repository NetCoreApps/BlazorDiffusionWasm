@page "/ssg/top"
@inherits ServiceStack.Mvc.RazorPage
@{
    Layout = "_LayoutStatic";
}
@using BlazorDiffusion.UI
@using BlazorDiffusion.ServiceModel
@inject UserState UserState

@{
    const int GridColumns = 4;

    SearchArtifacts request = new();
    List<Artifact> results = new();
    HashSet<int> resultIds = new();
    bool hasMore;

    ApiResult<QueryResponse<ArtifactResult>> api = new();
    GalleryResults GalleryResults = new() { GridColumns = GridColumns };

    request.Skip = 0;
    request.Take = UserState.StaticTake;
    request.Show = "top";
    api = await Gateway.ApiAsync(request);
    clearResults();

    if (api.Succeeded)
    {
        if (api.Response?.Results != null)
        {
            addResults(api.Response.Results);
        }
    }

    void setResults(IEnumerable<Artifact> newResults)
    {
        results = newResults.ToList();
        GalleryResults = X.Apply(GalleryResults.Clone(), x => x.Artifacts = results.ShuffleGridArtifacts(GridColumns).ToList());
    }
    
    void clearResults()
    {
        results.Clear();
        resultIds.Clear();
    }

    void addResults(List<ArtifactResult> artifacts, bool reset = false)
    {
        if (reset)
            clearResults();

        hasMore = artifacts.Count >= request.Take;
        foreach (var artifact in artifacts)
        {
            if (resultIds.Contains(artifact.Id))
                continue;

            resultIds.Add(artifact.Id);
            results.Add(artifact);
        }
        setResults(results);
    }
}

<h1 class="my-4 text-2xl text-center">Top Images</h1>

@await Html.PartialAsync("_StaticGallery", GalleryResults)

<!--/ssg/top-->
