@page "/ssg"
@inherits ServiceStack.Mvc.RazorPage
@{
    Layout = "_LayoutEmpty";
}
@using BlazorDiffusion.UI
@using BlazorDiffusion.ServiceModel
@inject UserState UserState

@{
    int? Id = Request.Query[nameof(Id)].FirstOrDefault()?.ConvertTo<int>();
    int? View = Request.Query[nameof(View)].FirstOrDefault()?.ConvertTo<int>();

    GalleryResults GalleryResults = new(); // composite params to hopefully reduce params

    SearchArtifacts request = new();

    List<Artifact> results = new();
    HashSet<int> resultIds = new();
    bool hasMore;

    SearchArtifacts? lastRequest;
    bool existingQuery = false;

    UserResult? SelectedUser;
    AlbumResult? SelectedAlbum;

    request = new SearchArtifacts {
        Skip = 0,
        Take = UserState.InitialTake,
    };
    await UserState.LoadAnonAsync();
    await updateAsync();

    async Task updateAsync()
    {
        await loadResults();
        await GalleryResults.LoadAsync(UserState, Id, View);
    }

    async Task loadResults()
    {
        if (existingQuery)
            return;

        request.Skip = 0;
        request.Take = UserState.InitialTake;
        var api = await Gateway.ApiAsync(request);
        clearResults();
        if (api.Succeeded)
        {
            if (api.Response?.Results != null)
            {
                addResults(api.Response.Results);
            }
            lastRequest = request.Clone();
        }
    }

    void clearResults()
    {
        lastRequest = null;
        results.Clear();
        resultIds.Clear();
    }
    
    void addResults(List<ArtifactResult> artifacts, bool reset = false)
    {
        if (reset)
            clearResults();

        hasMore = artifacts.Count >= request.Take;
        foreach (var artifact in artifacts)
        {
            if (resultIds.Contains(artifact.Id))
                continue;
            
            resultIds.Add(artifact.Id);
            results.Add(artifact);
        }
        setResults(results);
    }

    void setResults(IEnumerable<Artifact> newResults)
    {
        results = newResults.ToList();
        GalleryResults = X.Apply(GalleryResults.Clone(), x => x.Artifacts = UserState.GetArtifactsForGrid(results));
    }
}

<div class="overflow-hidden absolute w-full left-0" style="z-index:-1">
    <div class="py-8 sm:px-2 lg:relative lg:px-0">
        <div class="mx-auto">
            <div class="relative z-10 flex justify-center">
                <img src="/img/blur-cyan.png" width="530" height="530" decoding="async" data-nimg="future" class="absolute bottom-full right-full -mr-72 -mb-56 opacity-50" style="color:transparent">
            </div>
        </div>
    </div>
    <div class="relative lg:static xl:pl-10" style="height:300px">
        <div class="absolute inset-x-[-50vw] [mask-image:linear-gradient(transparent,white,white)] dark:[mask-image:linear-gradient(transparent,white,transparent)] lg:left-[calc(50%+14rem)] lg:right-0 lg:-top-32 lg:-bottom-32 lg:[mask-image:none] lg:dark:[mask-image:linear-gradient(white,white,transparent)]"><img class="absolute top-1/2 left-1/2 -translate-y-1/2 -translate-x-1/2 lg:left-0 lg:translate-x-0 lg:translate-y-[-60%]" src="/img/bg-body.svg"></div>
        <div class="relative">
            <img src="/img/blur-cyan.png" width="530" height="530" decoding="async" data-nimg="future" class="absolute -top-64 -right-64" style="color:transparent;/* display: none; */">
            <img src="/img/blur-indigo.png" width="567" height="567" decoding="async" data-nimg="future" class="absolute -bottom-40 -right-44" style="color:transparent;display:none;">
        </div>
    </div>
</div>

<div class>
    <div class="py-2 sm:py-8 sm:px-2 lg:px-0">
        <div class="mx-auto">
            <div class="relative z-10 flex justify-center">
                <div class="relative">
                    <div class="hidden sm:block">
                        <p class="inline bg-gradient-to-r from-indigo-200 via-sky-400 to-indigo-200 bg-clip-text font-display text-5xl tracking-tight text-transparent">Blazor Diffusion</p>
                        <p class="mt-3 text-2xl tracking-tight text-slate-400 text-center">
                            Stable Diffusion Image Search
                        </p>
                    </div>
                    <div class="mt-4 sm:mt-8 flex gap-2 sm:gap-4 justify-center">
                        <button type="button" class="inline-flex justify-center rounded-md border border-transparent py-2 px-4 text-sm font-medium shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 dark:ring-offset-black focus:ring-sky-300 text-white bg-sky-600 hover:bg-sky-700 focus:ring-sky-500 dark:bg-sky-600 dark:hover:bg-sky-700 dark:focus:ring-sky-500 !rounded-full py-2 px-4">Search</button>
                        <button type="button" class="inline-flex justify-center rounded-md border border-gray-300 py-2 px-4 text-sm font-medium shadow-sm focus:outline-none focus:ring-2 focus:ring-offset-2 bg-white dark:bg-gray-800 border-gray-300 dark:border-gray-600 text-gray-700 dark:text-gray-400 dark:hover:text-white hover:bg-gray-50 dark:hover:bg-gray-700 focus:ring-indigo-500 dark:focus:ring-indigo-600 dark:ring-offset-black !rounded-full py-2 px-4">Create</button>
                    </div>
                </div>
            </div>

            <form class="mt-2 sm:mt-8 p-2 sm:p-4 mx-auto shadow overflow-hidden sm:rounded-md w-[450px] sm:w-[600px]">
                <input class="hidden" type="submit">
                <div class="flex justify-center">
                    <div class="mt-1 relative rounded-md shadow-sm">
                        <input type="text" class="block w-full sm:text-sm rounded-md dark:text-white dark:bg-gray-900 shadow-sm focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 dark:border-gray-600 w-80 sm:w-96" id="Query" placeHolder="Search existing images" name="q" />
                    </div>
                </div>
            </form>

            <div class="flex">
                <div class="z-10 flex-shrink sm:mr-2">
                    <div class="flex flex-col sm:-ml-4 mt-16 sm:mt-8 pt-1 sm:pt-2 justify-center items-center">
                        <div class="text-xs sm:text-sm text-gray-500 whitespace-nowrap w-16 sm:w-24 text-center pb-1">top albums</div>

                        @foreach (var userAlbum in UserState.TopAlbums)
                        {
                            var albumCover = UserState.GetAlbumCoverArtifact(userAlbum);
                            @if (albumCover != null)
                            {
                                <a href="@Ssg.GetAlbum(userAlbum)">
                                    <div class="@Html.ClassNames("sm:mt-2 hover:opacity-80 cursor-pointer h-16 w-16 sm:h-24 sm:w-24 overflow-hidden rounded sm:rounded-lg border-2", "border-transparent")">
                                        @await Html.PartialAsync("_ArtifactImage", new ArtifactImageParams { Artifact = albumCover, Class = "flex w-full h-full", ImageClass="object-cover" })
                                    </div>
                                </a>
                            }
                        }

                        <a href="/albums.html" class="text-xs sm:text-sm text-gray-500 dark:hover:text-gray-300 whitespace-nowrap w-16 sm:w-24 text-center pb-1">more</a>

                    </div>
                </div><div class="flex-grow">
                    <div class="flex flex-wrap justify-between w-full">
                        <div class="w-full sm:w-1/3 sm:pl-2 sm:-mr-20 flex justify-center sm:justify-start items-center whitespace-nowrap">
                            <div class="text-xl sm:mb-1">&nbsp;</div>
                        </div>
                        <div class="w-full sm:w-1/3 flex justify-center items-center align-middle whitespace-nowrap">
                            <div class="z-20 mb-4 overflow-hidden rounded sm:rounded-md text-center -ml-16 sm:ml-0">
                                <label for="steps-range" class="block text-sm font-medium text-gray-600 dark:text-gray-400">5 columns</label>
                                <input id="steps-range" type="range" min="1" max="12" step="1" class="w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer dark:bg-gray-700" value="5" />
                            </div>
                        </div>
                        <div class="w-full sm:w-1/3"></div>
                    </div>

                @await Html.PartialAsync("_StaticGallery", GalleryResults)

                </div>
            </div>

            <div class="flex justify-center"></div>
        </div>
    </div>
</div>

<!--ssg/Empty/Home.cshtml-->