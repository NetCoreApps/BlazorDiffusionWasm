<Project Sdk="Microsoft.NET.Sdk.Web">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
    </PropertyGroup>
    <ItemGroup>
        <Using Include="ServiceStack" />
        <Using Include="ServiceStack.Mvc" />
        <Using Include="BlazorDiffusion" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Google.Protobuf" Version="3.21.7" />
        <PackageReference Include="Grpc.Core" Version="2.46.5" />
        <PackageReference Include="Grpc.Net.Client" Version="2.49.0" />
        <PackageReference Include="Grpc.Tools" Version="2.49.1">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Markdig" Version="0.30.3" />
        <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.Server" Version="6.0.0" />
        <PackageReference Include="ServiceStack" Version="6.*" />
        <PackageReference Include="ServiceStack.OrmLite.Sqlite.Data" Version="6.*" />
        <PackageReference Include="ServiceStack.Server" Version="6.*" />
        <PackageReference Include="ServiceStack.Mvc" Version="6.*" />
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="..\BlazorDiffusion.Client\BlazorDiffusion.Client.csproj" />
        <ProjectReference Include="..\BlazorDiffusion.ServiceInterface\BlazorDiffusion.ServiceInterface.csproj" />
        <ProjectReference Include="..\BlazorDiffusion.ServiceModel\BlazorDiffusion.ServiceModel.csproj" />
    </ItemGroup>

    <ItemGroup>
        <Protobuf Include="proto\dashboard.proto" GrpcServices="None" />
        <Protobuf Include="proto\engines.proto" GrpcServices="None" />
        <Protobuf Include="proto\generation.proto" GrpcServices="Client" ProtoRoot="proto\" />
        <Protobuf Include="proto\project.proto" GrpcServices="None" />
        <Protobuf Include="proto\tensors.proto" GrpcServices="None" />
    </ItemGroup>

    <Target Name="CreateAppDataFolderBuild" AfterTargets="AfterBuild">
      <MakeDir Directories="$(BuildDir)App_Data" Condition="!Exists('$(BuildDir)App_Data')" />
    </Target>
     
    <Target Name="CreateAppDataFolder" AfterTargets="AfterPublish">
        <MakeDir Directories="$(PublishDir)App_Data" Condition="!Exists('$(PublishDir)App_Data')" />
    </Target>
    
    <ItemGroup>
        <None Update="App_Data\seed\*">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <PropertyGroup>
        <ClientDir>$(MSBuildProjectDirectory)/../BlazorDiffusion.Client</ClientDir>
        <WwwRoot>$(ClientDir)/wwwroot</WwwRoot>
        <TestsDir>$(MSBuildProjectDirectory)/../BlazorDiffusion.Tests</TestsDir>
    </PropertyGroup>

    <Target Name="CopyWWW" AfterTargets="Build">
        <WriteLinesToFile File="$(ClientDir)/wwwroot/_index.html" Lines="$([System.IO.File]::ReadAllText(_index.html).Replace('blazor.server.js','blazor.webassembly.js'))" Overwrite="true" Encoding="UTF-8" />
    </Target>
    
    <!-- Populated in release.yml with GitHub Actions secrets -->
    <Target Name="DeployApi" AfterTargets="Build" Condition="$(DEPLOY_API) != ''">
        <Exec Command="echo DEPLOY_API=$(DEPLOY_API)" />

        <!-- Update Production settings with DEPLOY_API Blazor UI should use  -->
        <WriteLinesToFile File="$(WwwRoot)/appsettings.Production.json" Lines="$([System.IO.File]::ReadAllText($(WwwRoot)/appsettings.Production.json).Replace('{DEPLOY_API}',$(DEPLOY_API)))" Overwrite="true" Encoding="UTF-8" />

        <!-- 404.html SPA fallback (supported by GitHub Pages, Cloudflare & Netlify CDNs) -->
        <!--Copy SourceFiles="$(WwwRoot)/index.html" DestinationFiles="$(WwwRoot)/404.html" /-->

        <!-- define /api proxy routes (supported by Cloudflare or Netlify CDNs)  -->
        <WriteLinesToFile File="$(WwwRoot)/_redirects" Lines="$([System.IO.File]::ReadAllText($(WwwRoot)/_redirects).Replace('{DEPLOY_API}',$(DEPLOY_API)))" Overwrite="true" Encoding="UTF-8" />
    </Target>
    <Target Name="DeployCdn" AfterTargets="Build" Condition="$(DEPLOY_CDN) != ''">
        <Exec Command="echo DEPLOY_CDN=$(DEPLOY_CDN)" />

        <!-- Define custom domain name that CDN should use -->
        <Exec Condition="$(DEPLOY_CDN) != ''" Command="echo $(DEPLOY_CDN) &gt; $(WwwRoot)/CNAME" />
    </Target>

    <!-- Prerender tasks run in release.yml -->
    <Target Name="AppTasks" AfterTargets="Build" Condition="$(APP_TASKS) != ''">
        <CallTarget Targets="Prerender" Condition="$(APP_TASKS.Contains('prerender'))" />
    </Target>
    <Target Name="Prerender">
        <Message Text="Prerender..." />
        <Exec Command="dotnet test --filter FullyQualifiedName=BlazorDiffusion.Tests.PrerenderTasks --logger:&quot;console;verbosity=detailed&quot;" WorkingDirectory="$(TestsDir)" />
    </Target>

</Project>
